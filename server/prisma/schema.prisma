// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  name              String    @unique
  senha             String
  email             String    @unique
  picture           String?
  verified          Boolean   @default(false)

  friends           Friendship[] @relation("FriendshipUser1")
  friendsOf         Friendship[] @relation("FriendshipUser2")
  chatsAsUser1      Chat[]      @relation("ChatUser1")
  chatsAsUser2      Chat[]      @relation("ChatUser2")
  sentMessages      Message[]   @relation("MessageSender")
}

model Friendship {
  id        Int    @id @default(autoincrement())
  user1Id   Int
  user2Id   Int
  status    String @default("pending") // Pode ser "pending", "accepted"

  user1     User   @relation("FriendshipUser1", fields: [user1Id], references: [id])
  user2     User   @relation("FriendshipUser2", fields: [user2Id], references: [id])
}

model Chat {
  id          Int      @id @default(autoincrement())
  user1Id     Int
  user2Id     Int
  messages    Message[]

  user1       User     @relation("ChatUser1", fields: [user1Id], references: [id])
  user2       User     @relation("ChatUser2", fields: [user2Id], references: [id])
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    Int
  senderId  Int
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isSeen    Boolean  @default(false)
  order     Int      @default(autoincrement()) 
  chat      Chat     @relation(fields: [chatId], references: [id])
  sender    User     @relation("MessageSender", fields: [senderId], references: [id])
}
